/*
   canvas-example-state-machine
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.canvas.style.imageRendering="pixelated";opt.ctx.imageSmoothingEnabled=false;opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var Machine=function(){var attachCanvasEvent=function(sm,DOMType,smType){sm.canvas.addEventListener(DOMType,function(e){var pos=utils.getCanvasRelative(e),stateObj=sm.states[sm.currentState],handler,mode;e.preventDefault();if(stateObj.userPointer){handler=stateObj.userPointer[smType];if(handler){handler(pos,sm,e)}}if(stateObj.modes&&sm.currentMode){mode=stateObj.modes[sm.currentMode];if(mode.userPointer){handler=mode.userPointer[smType];if(handler){handler(pos,sm,e)}}}})};var attachAllCanvasEvents=function(sm){attachCanvasEvent(sm,"mousedown","start");attachCanvasEvent(sm,"mousemove","move");attachCanvasEvent(sm,"mouseup","end");attachCanvasEvent(sm,"touchstart","start");attachCanvasEvent(sm,"touchmove","move");attachCanvasEvent(sm,"touchend","end")};return function(container,w,h){var canvasObj=utils.createCanvas();var sm={ver:"0.0.0",currentState:null,currentMode:null,game:{},draw:{},states:{},canvas:canvasObj.canvas,container:canvasObj.container,ctx:canvasObj.ctx,load:function(stateObj){sm.states[stateObj.name||"game"]=stateObj;if(stateObj.bootState){sm.currentState=stateObj.name}},start:function(stateName){sm.currentState=stateName||sm.currentState;var init=sm.states[sm.currentState].init||null;if(init){init(sm)}loop()}};attachAllCanvasEvents(sm);var loop=function(){requestAnimationFrame(loop);var stateObj=sm.states[sm.currentState]||{};if(stateObj.tick){stateObj.tick(sm)}if(stateObj.modes&&sm.currentMode){var mode=stateObj.modes[sm.currentMode];if(mode.tick){mode.tick(sm)}}};return sm}}();var sm=Machine("canvas-app");sm.load({name:"game",bootState:true,init:function(sm){var g=sm.game;g.manual=0;g.perManual=.25;g.auto=0;g.autoTickRate=3e3;g.perAutoTick=1;g.pos={x:0,y:0};g.lt=new Date},tick:function(sm){var g=sm.game,ctx=sm.ctx,now=new Date,t=now-g.lt;if(t>=g.autoTickRate){var ticks=t/g.autoTickRate;g.auto+=ticks*g.perAutoTick;g.lt=now}ctx.fillStyle="black";ctx.textBaseline="top";ctx.fillRect(0,0,sm.canvas.width,sm.canvas.height);ctx.fillStyle="white";ctx.fillText("manual: "+g.manual.toFixed(2),10,20);ctx.fillText("auto: "+g.auto.toFixed(2),10,30);ctx.fillText("pos: "+g.pos.x.toFixed(2)+", "+g.pos.y.toFixed(2),10,40);ctx.font="10px arial";ctx.fillText("v"+sm.ver,5,sm.canvas.height-15)},userPointer:{start:function(pt,sm,e){var g=sm.game;g.manual+=sm.game.perManual;g.pos.x=pt.x;g.pos.y=pt.y}}});sm.start();
