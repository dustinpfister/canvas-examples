/*
   canvas-example-turret-defense
   Copyright 2020 - 2021 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.pi2=Math.PI*2;utils.noop=function(){};utils.mod=function(x,m){return(x%m+m)%m};utils.normalizeHalf=function(n,scale){var c=scale||360,h=c/2;return utils.mod(n+h,c)-h};utils.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};utils.angleDistance=function(a,b,scale){var m=scale||Math.PI*2,h=m/2,diff=utils.normalizeHalf(a-b);if(diff>h){diff=diff-m}return utils.mod(Math.abs(diff),scale)};utils.getAngleToPoint=function(pt1,pt2,scale){return utils.normalizeHalf(Math.atan2(pt1.y-pt2.y,pt1.x-pt2.x),scale)};utils.shortestAngleDirection=function(a1,a2,scale){var z=a1-a2,x=utils.normalizeHalf(z,scale);if(x<0){return-1}if(x>0){return 1}return 0};utils.boundingBox=function(x1,y1,w1,h1,x2,y2,w2,h2){return!(y1+h1<y2||y1>y2+h2||x1+w1<x2||x1>x2+w2)};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.canvas.style.imageRendering="pixelated";opt.ctx.imageSmoothingEnabled=false;opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var poolMod=function(){var api={};var getInactive=function(pool){var i=0,len=pool.objects.length,obj;while(i<len){obj=pool.objects[i];if(!obj.active){return obj}i+=1}return false};api.create=function(opt){opt=opt||{};opt.count=opt.count||10;var i=0,pool={maxSecs:opt.maxSecs||.125,objects:[],data:opt.data||{},spawn:opt.spawn||function(obj,pool,state,opt){},purge:opt.purge||function(obj,pool,state){},update:opt.update||function(obj,pool,state,secs){}};while(i<opt.count){pool.objects.push({active:false,i:i,x:opt.x===undefined?0:opt.x,y:opt.y===undefined?0:opt.y,w:opt.w===undefined?32:opt.w,h:opt.h===undefined?32:opt.h,heading:opt.heading===undefined?0:opt.heading,pps:opt.pps===undefined?32:opt.pps,lifespan:opt.lifespan||3,data:{}});i+=1}return pool};api.spawn=function(pool,state,opt){var obj=getInactive(pool);state=state||{};opt=opt||{};if(obj){if(!obj.active){obj.active=true;pool.spawn.call(pool,obj,pool,state,opt);return obj}}return false};api.update=function(pool,secs,state){var i=pool.objects.length,obj;state=state||{};secs=secs>=pool.maxSecs?pool.maxSecs:secs;while(i--){obj=pool.objects[i];if(obj.active){pool.update.call(pool,obj,pool,state,secs);obj.lifespan-=secs;obj.lifespan=obj.lifespan<0?0:obj.lifespan;if(obj.lifespan===0){obj.active=false;pool.purge.call(pool,obj,pool,state)}}}};api.setActiveStateForAll=function(pool,bool){bool=bool===undefined?false:bool;var i=pool.objects.length,obj;while(i--){obj=pool.objects[i];obj.active=bool}};api.getObjectAt=function(pool,x,y){var i=pool.objects.length,obj;while(i--){obj=pool.objects[i];if(obj.active){if(api.boundingBox(obj,{x:x,y:y,w:1,h:1})){return obj}}}return false};api.moveByPPS=function(obj,secs){obj.x+=Math.cos(obj.heading)*obj.pps*secs;obj.y+=Math.sin(obj.heading)*obj.pps*secs};api.createFramePerObj=function(frame,rev,sx,sy,dist,heading,maxFrame){return{per:0,sx:sx===undefined?0:sx,sy:sy===undefined?0:sy,dist:dist===undefined?100:dist,heading:heading===undefined?heading:heading,frame:frame===undefined?0:frame,frameMax:maxFrame===undefined?50:maxFrame,rev:rev===undefined?false:rev}};api.moveByFramePerObj=function(obj,fp){fp.per=fp.frame/fp.frameMax;fp.per=fp.per>1?1:fp.per;fp.per=fp.per<0?0:fp.per;fp.per=fp.rev?1-fp.per:fp.per;obj.x=fp.sx+Math.cos(fp.heading)*fp.dist*fp.per;obj.y=fp.sy+Math.sin(fp.heading)*fp.dist*fp.per;return fp.per};api.checkBounds=function(obj,canvas){if(obj.x>=canvas.width||obj.x<obj.w*-1||obj.y>canvas.height||obj.y<obj.h*-1){return false}return true};api.boundingBox=function(a,b){return utils.boundingBox(a.x,a.y,a.w,a.h,b.x,b.y,b.w,b.h)};api.activeCount=function(pool,activeState){activeState=activeState===undefined?true:activeState;var i=pool.objects.length,count=0;while(i--){if(pool.objects[i].active===activeState){count+=1}}return count};return api}();var waveMod=function(){var BUTTON_HEIGHT=128,BUTTON_BASE_PPS=BUTTON_HEIGHT/60,BUTTON_RUSH_PPS=BUTTON_HEIGHT/1;var api={};var spawn=function(obj,pool,sm,opt){obj.heading=Math.PI*1.5;obj.pps=pool.data.pps;obj.h=BUTTON_HEIGHT;obj.lifespan=Infinity;obj.x=opt.x||0;obj.y=opt.startY;obj.data.waveNumber=pool.data.waveNumber||0;obj.data.unitCount=pool.data.baseUnitCount;pool.data.waveNumber+=1;pool.data.toSpawn-=1};var update=function(obj,pool,sm,secs){obj.pps=pool.data.pps;poolMod.moveByPPS(obj,secs);if(obj.y<=0){obj.active=false;sm.game.onWaveStart(obj,sm);pool.data.currentWave+=1}};api.create=function(opt){opt=opt||{};opt.startY=opt.startY||0;var pool=poolMod.create({count:4,spawn:spawn,update:update,data:{sm:opt.sm||{},pps:BUTTON_BASE_PPS,baseUnitCount:opt.baseUnitCount||1,currentWave:0,waveNumber:1,waveCount:opt.waveCount||0,toSpawn:opt.waveCount,activeCount:4,rushTo:0}});pool.objects.map(function(obj,i){if(i<opt.waveCount){poolMod.spawn(pool,opt.sm,{x:opt.x,startY:opt.startY+i*BUTTON_HEIGHT})}});return{x:opt.x||0,y:opt.y||0,pool:pool}};var getLowsetActive=function(pool){var lowest={y:0,obj:{}};pool.objects.forEach(function(obj,i){if(obj.active&&obj.y>lowest.y){lowest.y=obj.y;lowest.obj=obj}});return lowest.obj};api.update=function(sm,secs){var pool=sm.game.waveButtons.pool;poolMod.update(pool,secs,sm);pool.data.activeCount=poolMod.activeCount(pool);if(pool.data.activeCount<pool.objects.length&&pool.data.toSpawn>0){var lowest=getLowsetActive(pool);poolMod.spawn(pool,sm,{startY:lowest.y+BUTTON_HEIGHT})}pool.data.pps=BUTTON_BASE_PPS;if(pool.data.rushTo>pool.data.currentWave){pool.data.pps=BUTTON_RUSH_PPS}};api.onClick=function(sm,pos){var pool=sm.game.waveButtons.pool;var obj=poolMod.getObjectAt(pool,pos.x,pos.y);if(obj){pool.data.rushTo=obj.data.waveNumber;return obj}return false};return api}();var gameMod=function(){var api={};var UNIT_PPS=32,UNIT_RELEASE_RATE_MIN=.25,UNIT_RELEASE_RATE_MAX=3,UNIT_HP_RANGE=[1,10],UNIT_SPAWN_DIST=400,SHOT_PPS=512,SHOT_MAX_DIST=375,PLAYER_UNIT_FIRE_RANGE=Math.PI/180*5,PLATER_UNIT_FIRE_RATE=[.125,.125];var PLAYER_UNITS={};PLAYER_UNITS.manual={spawn:function(obj,pool,sm,opt){obj.heading=Math.PI*1.5;obj.data.damage=1;obj.RFControl=RFC_create()},update:function(obj,pool,sm,secs){if(sm.pointerDown){RFC_update_fireRate(obj.RFControl,secs);if(obj.RFControl.fire){poolMod.spawn(sm.game.playerShotsPool,sm,{playerUnit:obj});obj.RFControl.fire=false}}RFC_update_facing(obj.RFControl,obj.heading,sm.pointerDown,secs)},onclick:function(obj,pool,sm,pos,e){},ondown:function(obj,pool,sm,pos,e){},onmove:function(obj,pool,sm,pos,e){RFC_update_target(obj,pos.x,pos.y)},onend:function(obj,pool,sm,pos,e){}};var RFC_create=function(opt){opt=opt||{};return{radiansPerSec:Math.PI/180*90,facing:1.2,target:0,fireRate:PLATER_UNIT_FIRE_RATE[1],fireSecs:0,fire:false}};var RFC_update_fireRate=function(rfc,secs){rfc.fireSecs+=secs;if(rfc.fireSecs>=rfc.fireRate){rfc.fireSecs=0;rfc.fire=true}};var RFC_update_target=function(obj,x,y){obj.RFControl.target=utils.getAngleToPoint({x:x,y:y},obj,utils.pi2)};var RFC_update_facing=function(rfc,heading,down,secs){down=down||false;var toAngle=heading===undefined?0:heading;if(down){toAngle=rfc.target}var dist=utils.angleDistance(rfc.facing,toAngle,utils.pi2);var dir=utils.shortestAngleDirection(toAngle,rfc.facing,utils.pi2);var delta=rfc.radiansPerSec*secs;if(delta>dist){rfc.facing=toAngle}else{rfc.facing+=delta*dir}rfc.inRange=false;if(down&&dist<PLAYER_UNIT_FIRE_RANGE){rfc.inRange=true}};var createHPprops=function(obj,hpRange,hpPer){var HPDelta=Math.round((hpRange[1]-hpRange[0])*hpPer);obj.data.maxHP=hpRange[0]+HPDelta;obj.data.HP=obj.data.maxHP};var onWaveStart=function(waveObj,sm){sm.game.unitQueue.unitCount+=waveObj.data.unitCount};var playerUnitSpawn=function(obj,pool,sm,opt){obj.lifespan=Infinity;var type=opt.type||"manual";obj.data.type=type;obj.data.gridIndex=opt.gridIndex||0;var size=32,halfSize=size/2,x=sm.canvas.width/2-halfSize,y=sm.canvas.height/2-halfSize;obj.heading=Math.PI*1.5;obj.x=x;obj.y=y;obj.w=32;obj.h=32;obj.data.cx=obj.x+halfSize;obj.data.cy=obj.y+halfSize;createHPprops(obj,[10,10],1);PLAYER_UNITS[type].spawn(obj,pool,sm,opt)};var playerUnitUpdate=function(obj,pool,sm,secs){if(obj.data.HP===0){obj.lifespan=0}PLAYER_UNITS[obj.data.type].update(obj,pool,sm,secs)};var playerShotSpawn=function(obj,pool,sm,opt){obj.heading=opt.playerUnit.RFControl.facing;obj.pps=SHOT_PPS;obj.w=8;obj.h=8;obj.x=opt.playerUnit.x-obj.w/2;obj.y=opt.playerUnit.y-obj.h/2;obj.lifespan=Infinity;obj.data.playerUnit=opt.playerUnit;obj.data.damage=opt.playerUnit.data.damage};var playerShotUpdate=function(obj,pool,sm,secs){poolMod.moveByPPS(obj,secs);sm.game.unitPool.objects.forEach(function(eUnit){if(eUnit.active&&poolMod.boundingBox(eUnit,obj)){eUnit.data.HP-=obj.data.damage;if(eUnit.data.HP<=0){eUnit.data.HP=0;eUnit.lifespan=0}obj.lifespan=0}});if(utils.distance(obj.x,obj.y,obj.data.playerUnit.x,obj.data.playerUnit.y)>=SHOT_MAX_DIST){obj.lifespan=0}};var unitSpawn=function(obj,pool,sm,opt){var game=sm.game;var radian=Math.PI*2*Math.random(),radius=UNIT_SPAWN_DIST;obj.x=sm.canvas.width*.5-obj.w/2+Math.cos(radian)*radius;obj.y=sm.canvas.height*.5-obj.h/2+Math.sin(radian)*radius;obj.heading=radian+Math.PI;obj.lifespan=Infinity;createHPprops(obj,game.unitHPRange,opt.wavePer);obj.damage=1};var unitUpdate=function(obj,pool,sm,secs){var cx=sm.canvas.width*.5,cy=sm.canvas.height*.5;obj.pps=UNIT_PPS;if(utils.distance(obj.x+obj.w/2,obj.y+obj.h/2,cx,cy)<=25){sm.game.playerUnitPool.objects.forEach(function(playerUnit){playerUnit.data.HP-=obj.damage;playerUnit.data.HP=playerUnit.data.HP<0?0:playerUnit.data.HP});obj.lifespan=0;obj.pps=0}poolMod.moveByPPS(obj,secs)};api.create=function(opt){opt=opt||{};var game={unitHPRange:opt.unitHPRange||UNIT_HP_RANGE,activeCount:0,win:false,gameOver:false,unitQueue:{unitCount:0,secs:0},unitPool:poolMod.create({count:30,spawn:unitSpawn,update:unitUpdate,data:{}}),playerUnitPool:poolMod.create({count:1,spawn:playerUnitSpawn,update:playerUnitUpdate,data:{}}),playerShotsPool:poolMod.create({count:50,spawn:playerShotSpawn,update:playerShotUpdate,data:{}}),waveButtons:waveMod.create({startY:64,waveCount:opt.waveCount||99,baseUnitCount:opt.baseUnitCount||10}),onWaveStart:onWaveStart};return game};api.update=function(sm,secs){var game=sm.game;if(game.unitQueue.unitCount>0){game.unitQueue.secs+=secs;var releasePer=game.unitQueue.unitCount/30;releasePer=releasePer>1?1:releasePer;var releaseDelta=(UNIT_RELEASE_RATE_MAX-UNIT_RELEASE_RATE_MIN)*(1-releasePer);game.unit_release_rate=UNIT_RELEASE_RATE_MIN+releaseDelta;if(game.unitQueue.secs>game.unit_release_rate){var waveData=game.waveButtons.pool.data,wavePer=waveData.currentWave/waveData.waveCount;var unit=poolMod.spawn(game.unitPool,sm,{wavePer:wavePer,game:game});if(unit){game.unitQueue.unitCount-=1}game.unitQueue.secs=0}}if(poolMod.activeCount(game.playerUnitPool)===0){game.win=false;game.gameOver=true}var wbData=game.waveButtons.pool.data;var over=false,activeCount=poolMod.activeCount(game.unitPool);if(wbData.currentWave===wbData.waveCount){if(activeCount===0&&sm.game.unitQueue.unitCount===0){game.win=true;game.gameOver=true}}game.activeCount=activeCount;waveMod.update(sm,secs);poolMod.update(game.unitPool,secs,sm);poolMod.update(game.playerUnitPool,secs,sm);poolMod.update(game.playerShotsPool,secs,sm)};var unitEventCheck=function(type,game,pos,e,sm){game.playerUnitPool.objects.forEach(function(obj){var unitProfile=PLAYER_UNITS[obj.data.type];if(unitProfile["on"+type]&&obj.active){unitProfile["on"+type](obj,game.playerUnitPool,sm,pos,e)}})};api.click=function(game,pos,e,sm){if(!waveMod.onClick(sm,pos)){unitEventCheck("click",game,pos,e,sm)}};api.onPointerDown=function(game,pos,e,sm){unitEventCheck("down",game,pos,e,sm)};api.onPointerMove=function(game,pos,e,sm){unitEventCheck("move",game,pos,e,sm)};api.onPointerUp=function(game,pos,e,sm){unitEventCheck("end",game,pos,e,sm)};return api}();var forFrame=function(){var DEFAULT_MAX_FRAME=50,DEFAULT_FRAME=0,DEFAULT_WIDTH=320,DEFAULT_HEIGHT=240,FORFRAME_BUILT_IN=function(){},FFDRAW_BUILT_IN=function(){};var setFrame=function(ff,frame){ff.frame=frame;ff.frame=utils.mod(ff.frame,ff.maxFrame);ff.per=ff.frame/ff.maxFrame;ff.bias=1-Math.abs(.5-ff.per)/.5;ff.model={};var argu=[ff.model,ff.model.points,ff.per];ff.model=ff.forFrame.apply(ff,[ff].concat(argu));return ff};var api={};api.create=function(opt){opt=opt||{};var ff={type:opt.type||"plain",frame:opt.frame||DEFAULT_FRAME,width:opt.width||DEFAULT_WIDTH,height:opt.height||DEFAULT_HEIGHT,maxFrame:opt.maxFrame||DEFAULT_MAX_FRAME,model:{},per:0,secs:0};ff.forFrame=opt.forFrame||FORFRAME_BUILT_IN;ff=setFrame(ff,ff.frame);return ff};api.step=function(ff,stepFrames){stepFrames=stepFrames===undefined?1:stepFrames;stepFrames=Math.round(stepFrames);return setFrame(ff,ff.frame+stepFrames)};api.update=function(ff,secs,fps){var frames;secs=secs===undefined?0:secs;fps=fps===undefined?30:fps;ff.secs+=secs;if(ff.secs>=1/fps){frames=Math.floor(ff.secs/(1/fps));api.step(ff,frames);ff.secs=utils.mod(ff.secs,1/fps)}return ff};api.createCanvas=function(ff,ffDraw,backFill,stroke,fill){var canvas=document.createElement("canvas"),ctx=canvas.getContext("2d");canvas.width=ff.width*ff.maxFrame;canvas.height=ff.height;ffDraw=ffDraw||FFDRAW_BUILT_IN;if(backFill){ctx.fillStyle=backFill;ctx.fillRect(0,0,canvas.width,canvas.height)}ff.frame=0;while(ff.frame<ff.maxFrame){setFrame(ff,ff.frame);ffDraw.apply(ff,[ff,ctx,canvas,stroke,fill]);ctx.translate(ff.width,0);ff.frame+=1}return{canvas:canvas,ctx:ctx,frame:0,maxFrame:ff.maxFrame,cellWidth:ff.width,cellHeight:ff.height,step:function(delta){delta=delta===undefined?1:delta;this.frame+=delta;this.frame=utils.mod(this.frame,this.maxFrame)},set:function(frame){frame=frame===undefined?0:frame;this.frame=frame;this.frame=utils.mod(this.frame,this.maxFrame)},draw:function(ctx,x,y,w,h){ctx.drawImage(this.canvas,this.cellWidth*this.frame,0,this.cellWidth,this.cellHeight,x,y,w,h)}}};return api}();var pixmapMod=function(){var api={};var plugins={};api.load=function(plug){var key=plug.name||"pix_"+Object.keys(plugins).length;plugins[key]=plug;console.log(plugins)};var createFF=function(maxFrame,w,h,pixdata,pallette){var size=w*h;return forFrame.create({maxFrame:maxFrame,width:w,height:h,forFrame:function(ff,model,frame,maxFrame,per){return{pallette:pallette,pixdata:pixdata.slice(ff.frame*size,ff.frame*size+size)}}})};var ffDraw=function(ff,ctx,canvas){var colors=ff.model.pallette;ctx.imageSmoothingEnabled=false;ff.model.pixdata.forEach(function(colorIndex,pxIndex){var x=pxIndex%ff.width,y=Math.floor(pxIndex/ff.width);if(typeof colors[colorIndex]==="string"){ctx.fillStyle=colors[colorIndex];ctx.fillRect(x,y,1,1)}})};api.create=function(opt){var pixmaps={};Object.keys(plugins).forEach(function(key){var plug=plugins[key];pixmaps[key]={};Object.keys(plug.ani).forEach(function(aniKey){var ani=plug.ani[aniKey],frameSize=ani.w*ani.h,maxFrame=ani.data.length/frameSize,palette=plug.palettes[ani.paletteIndex],ff=createFF(maxFrame,ani.w,ani.h,ani.data,palette);pixmaps[key][aniKey]=forFrame.createCanvas(ff,ffDraw)})});return pixmaps};return api}();var draw=function(){var api={};api.background=function(ctx,canvas,style){ctx.globalAlpha=1;ctx.fillStyle=style||"black";ctx.fillRect(0,0,canvas.width,canvas.height)};var drawPool=function(ctx,pool,globalDraw){var i=pool.objects.length,obj;ctx.fillStyle="white";ctx.strokeStyle="black";ctx.lineWidth=3;while(i--){obj=pool.objects[i];if(obj.active){ctx.save();if(obj.data.draw){obj.data.draw(ctx,obj,i)}else{globalDraw(ctx,obj,i)}ctx.restore()}}};var globalDraw={basic:function(ctx,obj,i){ctx.fillStyle=obj.data.fill||"white";ctx.beginPath();ctx.rect(obj.x,obj.y,obj.w,obj.h);ctx.fill();ctx.stroke();ctx.globalAlpha=1},levelButton:function(ctx,obj,i){globalDraw.basic(ctx,obj,i);ctx.fillStyle="gray";ctx.font="15px arial";ctx.fillText(""+(obj.i+1),obj.x+5,obj.y+5);ctx.font="10px arial";var gd=obj.data.gameOptions;ctx.fillText("waves: "+gd.waveCount,obj.x+5,obj.y+20);ctx.fillText("b.u.c: "+gd.baseUnitCount,obj.x+5,obj.y+30);ctx.fillText("hp range: "+gd.unitHPRange,obj.x+5,obj.y+40)},unit:function(ctx,obj,i){globalDraw.basic(ctx,obj,i);ctx.fillStyle="lime";var per=obj.data.HP/obj.data.maxHP;ctx.fillRect(obj.x,obj.y,obj.w*per,10)},playerTurret:function(ctx,turret,i){var RFC=turret.RFControl;ctx.save();ctx.translate(turret.x,turret.y);ctx.fillStyle="yellow";ctx.fillRect(turret.w*.5*-1,turret.h*.5*-1,turret.w,turret.h);ctx.rotate(RFC.facing);ctx.fillStyle="red";ctx.strokeStyle="red";ctx.fillRect(turret.w*.3*-1,turret.h*.3*-1,turret.w*.6,turret.h*.6);ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(turret.w,0);ctx.stroke();ctx.restore();ctx.fillStyle="rgba(0,255,0,0.75)";var per=turret.data.HP/turret.data.maxHP;ctx.fillRect(turret.x-16,turret.y-16,turret.w*per,10)},waveButtons:function(ctx,obj,i){globalDraw.basic(ctx,obj,i);ctx.fillStyle="black";ctx.fillText(obj.data.waveNumber,obj.x+5,obj.y+5)},buttonPool:function(ctx,obj,i){var parts=obj.data.action.split("_");ctx.fillStyle=obj.data.fill||"white";ctx.translate(obj.x,obj.y);ctx.beginPath();ctx.globalAlpha=obj.data.alpha===undefined?1:obj.data.alpha;ctx.rect(0,0,obj.w,obj.h);ctx.fill();if(parts[2]==="current"){var value=sm.modeSettings[parts[3]],range=obj.data.setting.range,deltaRange=range[1]-range[0],per=(value-range[0])/deltaRange;ctx.beginPath();ctx.fillStyle="black";ctx.rect(0,0,obj.w*per,obj.h);ctx.fill()}ctx.beginPath();ctx.rect(0,0,obj.w,obj.h);ctx.globalAlpha=obj.data.alpha2===undefined?ctx.globalAlpha:obj.data.alpha2;ctx.stroke();if(obj.data.disp){ctx.fillStyle="black";ctx.textBaseline="middle";ctx.font="20px arial";ctx.textAlign="center";ctx.fillText(obj.data.disp,obj.w/2,obj.h/2)}ctx.globalAlpha=1}};api.pool=function(ctx,pool,method){method=method||"basic";method=typeof method==="string"?globalDraw[method]:method;drawPool(ctx,pool,method)};api.levelButtons=function(ctx,pool,alpha){ctx.globalAlpha=alpha;drawPool(ctx,pool,globalDraw.levelButton);ctx.globalAlpha=1};api.units=function(ctx,pool){drawPool(ctx,pool,globalDraw.unit)};api.playerUnits=function(ctx,pool){drawPool(ctx,pool,globalDraw.playerTurret)};api.waveButtons=function(ctx,pool){drawPool(ctx,pool,globalDraw.waveButtons)};api.buttonPool=function(ctx,pool,sm){sm=sm||{};drawPool(ctx,pool,globalDraw.buttonPool)};api.resetButton=function(ctx,sm){ctx.fillStyle="white";ctx.globalAlpha=1;ctx.beginPath();var obj=sm.resetButton;ctx.rect(obj.x,obj.y,obj.w,obj.h);ctx.fill();ctx.stroke();ctx.globalAlpha=1};api.ver=function(ctx,canvas,sm){ctx.fillStyle="white";ctx.textBaseline="top";ctx.font="15px arial";ctx.textAlign="left";ctx.fillText("v"+sm.ver,canvas.width-50,canvas.height-15)};return api}();var stateMachine=function(){var api={};var STATES={};var createThis=function(sm){var state=sm.states[sm.currentState];state.data=state.data||{};return{sm:sm,state:state,data:state.data}};var callStateMethod=function(sm,method,additionalArgs){var state=sm.states[sm.currentState];var thisObject=createThis(sm),standardArgs=[sm,state,state.data],args=standardArgs.concat(additionalArgs||[]);method.apply(thisObject,args)};var createPointerHandler=function(sm,eventType){eventType=eventType||"start";return function(e){var pos=sm.pos=utils.getCanvasRelative(e);var state=sm.states[sm.currentState],pointer=state.pointer;if(pointer){if(pointer[eventType]){callStateMethod(sm,pointer[eventType],[pos,e])}}if(eventType==="start"){sm.pointerDown=true}if(eventType==="end"){sm.pointerDown=false;if(state.click){callStateMethod(sm,state.click,[pos,e])}}}};api.create=function(opt){opt=opt||{};var canvasObj=utils.createCanvas({width:640,height:480}),canvas=canvasObj.canvas,ctx=canvasObj.ctx;var sm={ver:opt.ver||"",appName:opt.appName||"",debugMode:opt.debugMode||false,canvas:canvas,ctx:ctx,game:{},lt:new Date,currentState:"title",states:STATES,trans:{active:true,inState:true,secs:0,secsTotal:opt.transSecsTotal||.5,onDone:utils.noop},buttons:api.createButtonPool(20),background:"blue",frameRate:opt.frameRate||30,pointerDown:false,pos:{}};sm.canvas.addEventListener("mousedown",createPointerHandler(sm,"start"));sm.canvas.addEventListener("mousemove",createPointerHandler(sm,"move"));sm.canvas.addEventListener("mouseup",createPointerHandler(sm,"end"));sm.canvas.addEventListener("touchstart",createPointerHandler(sm,"start"));sm.canvas.addEventListener("touchmove",createPointerHandler(sm,"move"));sm.canvas.addEventListener("touchend",createPointerHandler(sm,"end"));return sm};api.createButtonPool=function(count){return poolMod.create({count:count||20,maxSecs:.25,spawn:function(obj,pool,sm,opt){obj.data=opt;obj.x=opt.hx;obj.y=opt.hy;obj.w=opt.w||128;obj.h=opt.h||32},update:function(obj,pool,sm,secs){var fp={sx:obj.data.sx||0,sy:obj.data.sy||0,dist:obj.data.dist||0,heading:obj.data.heading||0,frame:Math.round(sm.trans.secs/sm.trans.secsTotal*50),frameMax:50,rev:!sm.trans.inState};poolMod.moveByFramePerObj(obj,fp);obj.lifespan=Infinity}})};api.spawnButton=function(sm,bx,actionString,dispText,angle,poolKey){poolKey=poolKey===undefined?"buttons":poolKey;angle=angle===undefined?Math.PI*.5:angle;var sx=bx.x+Math.cos(angle)*sm.canvas.width,sy=bx.y+Math.sin(angle)*sm.canvas.width;return poolMod.spawn(sm[poolKey],sm,{action:actionString,disp:dispText,fill:"#ffffff",sx:sx,sy:sy,w:bx.w||256,h:bx.h||64,alpha:.4,alpha2:.8,dist:utils.distance(bx.x,bx.y,sx,sy),heading:utils.mod(angle+Math.PI,Math.PI*2)})};api.getButtonByAction=function(buttonPool,action){var result=buttonPool.objects.filter(function(button){return button.active&&button.data.action===action});if(result.length>=1){return result[0]}return false};api.changeState=function(sm,stateKey,initOpt){initOpt=initOpt||{};sm.currentState=stateKey;sm.trans.active=true;sm.trans.inState=true;sm.trans.secs=0;poolMod.setActiveStateForAll(sm.buttons,false);callStateMethod(sm,sm.states[sm.currentState].init,[initOpt])};api.startStateChangeTrans=function(sm,stateKey,initOpt){initOpt=initOpt||{};sm.trans.active=true;sm.trans.inState=false;sm.trans.secs=0;sm.trans.onDone=function(sm){api.changeState(sm,stateKey,initOpt);sm.trans.onDone=function(){};sm.trans.onDone=utils.noop}};api.updateState=function(sm,secs){var state=sm.states[sm.currentState];if(sm.trans.active){if(sm.trans.secs<sm.trans.secsTotal){sm.trans.secs+=secs;sm.trans.secs=sm.trans.secs>sm.trans.secsTotal?sm.trans.secsTotal:sm.trans.secs;if(sm.trans.secs===sm.trans.secsTotal){sm.trans.active=false;sm.trans.onDone(sm)}}callStateMethod(sm,state.trans,[secs])}else{callStateMethod(sm,state.update,[secs])}};api.load=function(stateObj){STATES[stateObj.key]=stateObj};return api}();(function(){stateMachine.load({key:"title",init:function(sm,state,data){var x=sm.canvas.width*.5,y=sm.canvas.height*.5;stateMachine.spawnButton(sm,{x:x-128,y:y},"start_state_worldmap","Play");y=sm.canvas.height*.1;stateMachine.spawnButton(sm,{x:x-256,y:y,w:512,h:128},"title","Turret Defense")},trans:function(sm,state,data,secs){poolMod.update(sm.buttons,secs,sm)},update:function(sm,state,data,secs){},draw:function(sm,state,data,ctx,canvas){draw.background(ctx,canvas,sm.background);draw.buttonPool(ctx,sm.buttons)},click:function(sm,state,data,pos,e){var button=poolMod.getObjectAt(sm.buttons,pos.x,pos.y);if(button){if(button.data.action==="start_state_worldmap"){stateMachine.startStateChangeTrans(sm,"worldmap")}}}})})();(function(){var LEVELS=[{x:264,y:225,gameOptions:{waveCount:3,baseUnitCount:5,unitHPRange:[1,1]}},{x:370,y:180,gameOptions:{waveCount:7,baseUnitCount:10,unitHPRange:[2,10]}},{x:170,y:80,gameOptions:{waveCount:15,baseUnitCount:12,unitHPRange:[3,14]}},{x:70,y:380,gameOptions:{waveCount:18,baseUnitCount:13,unitHPRange:[5,18]}},{x:430,y:360,gameOptions:{waveCount:99,baseUnitCount:18,unitHPRange:[10,25]}}];var createLevelButtonPool=function(count){return poolMod.create({count:count||10,maxSecs:.25,spawn:function(obj,pool,sm,levelObj){obj.data=levelObj;obj.data.alpha=.8;obj.x=levelObj.x===undefined?0:levelObj.x;obj.y=levelObj.y===undefined?0:levelObj.y;obj.w=64;obj.h=64},update:function(obj,pool,sm,secs){obj.lifespan=Infinity}})};var spawnLevelButton=function(sm,data,levelObj){poolMod.spawn(data.levelButtons,sm,levelObj)};var spawnLevels=function(sm,data){LEVELS.forEach(function(levelObj){spawnLevelButton(sm,data,levelObj)})};stateMachine.load({key:"worldmap",data:{levelButtons:createLevelButtonPool(LEVELS.length),transEffect:{alpha:0,obj:{x:0,y:0},fp:{}}},init:function(sm,state,data,initObj){var x=sm.canvas.width*.87,y=sm.canvas.height*.045;stateMachine.spawnButton(sm,{x:x,y:y,w:64},"start_state_title","Title");spawnLevels(sm,data)},trans:function(sm,state,data,secs,per){if(data.transEffect){var frame=Math.round(sm.trans.secs/sm.trans.secsTotal*50);var fp=poolMod.createFramePerObj(frame,!sm.trans.inState);poolMod.moveByFramePerObj(data.transEffect.obj,fp);data.transEffect.alpha=fp.per}poolMod.update(sm.buttons,secs,sm)},update:function(sm,state,data,secs){},draw:function(sm,state,data,ctx,canvas){draw.background(ctx,canvas,sm.background);draw.buttonPool(ctx,sm.buttons);draw.levelButtons(ctx,data.levelButtons,data.transEffect.alpha)},click:function(sm,state,data,pos,e){var button=poolMod.getObjectAt(sm.buttons,pos.x,pos.y);if(button){if(button.data.action==="start_state_title"){stateMachine.startStateChangeTrans(sm,"title",{})}}var lvButton=poolMod.getObjectAt(this.data.levelButtons,pos.x,pos.y);if(lvButton){stateMachine.startStateChangeTrans(sm,"game",lvButton.data.gameOptions)}}})})();(function(){stateMachine.load({key:"game",init:function(sm,state,data,gameOptions){var x=sm.canvas.width*.87,y=sm.canvas.height*.045;stateMachine.spawnButton(sm,{x:x,y:y,w:64},"start_state_worldmap","Map");sm.game=gameMod.create(gameOptions||{sm:sm});poolMod.spawn(sm.game.playerUnitPool,sm,{})},trans:function(sm,state,data,secs){poolMod.update(sm.buttons,secs,sm)},update:function(sm,state,data,secs){gameMod.update(sm,secs);if(sm.game.gameOver){stateMachine.startStateChangeTrans(sm,"gameOver")}},draw:function(sm,state,data,ctx,canvas){draw.background(ctx,canvas,sm.background);draw.units(sm.ctx,sm.game.unitPool);draw.playerUnits(sm.ctx,sm.game.playerUnitPool);draw.pool(sm.ctx,sm.game.playerShotsPool);draw.waveButtons(sm.ctx,sm.game.waveButtons.pool);draw.buttonPool(ctx,sm.buttons);var waveButtonsPool=sm.game.waveButtons.pool,waveButtonData=waveButtonsPool.data,sx=40,sy=32;if(sm.debugMode){ctx.fillStyle="white";ctx.font="10px arial";ctx.textBaseline="top";ctx.textAlign="left";ctx.fillText("currentWave: "+waveButtonData.currentWave,sx,sy);ctx.fillText("waveCount: "+waveButtonData.waveCount,sx,sy+10);ctx.fillText("toSpawn: "+waveButtonData.toSpawn,sx,sy+20);ctx.fillText("ActiveWaveButtonCount: "+waveButtonData.activeCount,sx,sy+30);ctx.fillText("rushTo: "+waveButtonData.rushTo,sx,sy+40);ctx.fillText("Unit Count: "+sm.game.unitQueue.unitCount,sx,sy+50);ctx.fillText("Active Player Units: "+sm.game.activeCount,sx,sy+60)}},click:function(sm,state,data,pos,e){var button=poolMod.getObjectAt(sm.buttons,pos.x,pos.y);if(button){if(button.data.action==="start_state_worldmap"){stateMachine.startStateChangeTrans(sm,"worldmap")}}},pointer:{start:function(sm,state,data,pos,e,state){gameMod.click(sm.game,pos,e,sm)},move:function(sm,state,data,pos,e,state){gameMod.onPointerMove(sm.game,pos,e,sm)},end:function(sm,state,data,pos,e,state){}}})})();(function(){stateMachine.load({key:"gameOver",init:function(sm,state,data,initObj){var x=sm.canvas.width*.5-128,y=sm.canvas.height*.3;stateMachine.spawnButton(sm,{x:x,y:y},"start_state_worldmap","World Map")},trans:function(sm,state,data,secs){poolMod.update(sm.buttons,secs,sm)},update:function(sm,state,data,secs){},draw:function(sm,state,data,ctx,canvas){draw.background(ctx,canvas,sm.background);draw.units(sm.ctx,sm.game.unitPool);draw.units(sm.ctx,sm.game.playerUnitPool);draw.buttonPool(ctx,sm.buttons);var sx=40,sy=32;if(sm.debugMode){ctx.fillStyle="white";ctx.font="10px arial";ctx.textBaseline="top";ctx.textAlign="left";ctx.fillText("gameOver?: "+sm.game.gameOver,sx,sy);ctx.fillText("Win?: "+sm.game.win,sx,sy+10)}},click:function(sm,state,data,pos,e){var button=poolMod.getObjectAt(sm.buttons,pos.x,pos.y);if(button){if(button.data.action==="start_state_worldmap"){stateMachine.startStateChangeTrans(sm,"worldmap")}}}})})();(function(){var sm=stateMachine.create({appName:"canvas-example-turret-defense",ver:"0.4.1",debugMode:true,saveSlotIndex:0,frameRate:20,transSecsTotal:.75});stateMachine.changeState(sm,"title");var loop=function(){var now=new Date,secs=(now-sm.lt)/1e3;requestAnimationFrame(loop);if(secs>=1/sm.frameRate){stateMachine.updateState(sm,secs);var state=sm.states[sm.currentState];state.draw(sm,state,state.data,sm.ctx,sm.canvas);draw.ver(sm.ctx,sm.canvas,sm);sm.lt=now}};loop()})();
